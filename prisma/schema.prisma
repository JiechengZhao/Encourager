// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Settings {
  id           Int      @id @default(autoincrement())
  systemListen Boolean  @default(true)
  createdAt    DateTime @default(now())
}

model Conversation {
  id           Int           @id @default(autoincrement())
  title        String
  description  String?
  chatMessages ChatMessage[]
  dialogs      LLMDialog[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  SubDialog    SubDialog[]
}

model SubDialog {
  id             Int           @id @default(autoincrement())
  conversationId Int
  conversation   Conversation  @relation(fields: [conversationId], references: [id])
  task           String
  payload        String?
  status         String
  createdAt      DateTime      @default(now())
  ChatMessage    ChatMessage[]
  Task           Task[]
}

model ChatMessage {
  id             Int          @id @default(autoincrement())
  sender         String
  content        String
  conversationId Int
  subDialogId    Int?
  SubDialog      SubDialog?   @relation(fields: [subDialogId], references: [id])
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  createdAt      DateTime     @default(now())
}

model LLMDialog {
  id             Int              @id @default(autoincrement())
  system         String
  template       String?
  name           String           @default("AI")
  bot            String
  mode           String           @default("use history")
  conversationId Int
  conversation   Conversation     @relation(fields: [conversationId], references: [id])
  createdAt      DateTime         @default(now())
  questionAnswer QuestionAnswer[]
}

model QuestionAnswer {
  id          Int       @id @default(autoincrement())
  question    String
  answer      String
  lLMDialogId Int
  lLMDialog   LLMDialog @relation(fields: [lLMDialogId], references: [id])
  createdAt   DateTime  @default(now())
}

model SimpleTalk {
  id        Int      @id @default(autoincrement())
  botName   String
  question  String
  answer    String
  system    String?
  createdAt DateTime @default(now())
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  subDialogId Int
  SubDialog   SubDialog @relation(fields: [subDialogId], references: [id])
  parentId    Int?
  parent      Task?     @relation("TaskToSubtask", fields: [parentId], references: [id])
  subtasks    Task[]    @relation("TaskToSubtask")
  dueDate     DateTime?
  completed   Boolean   @default(false)
}
